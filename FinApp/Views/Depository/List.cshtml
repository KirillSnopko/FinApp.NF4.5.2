@model IEnumerable<FinApp.Entities.Finance.Depository>
@using FinApp.Entities.Finance

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-inline-block">
    <h4>Depositories <span class="badge badge-secondary">@Model.Count()</span></h4>
</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Value</th>
            <th>Currency</th>

        </tr>
    </thead>
    <tbody>
        @foreach (Depository dep in Model)
        {
            <tr>
                <td>@dep.name</td>
                <td>@dep.typeDep</td>
                <td>@dep.amount</td>
                <td>@dep.typeMoney</td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = dep.id }, new { @class = "btn btn-secondary " })
                </td>
            </tr>
        }

    </tbody>
</table>

<button type="button" class="btn btn-success" data-toggle="modal" data-target="#create">Create new</button>


<!--  (name=.., type of dep=.., type of money=.., amount of maney=..)-->
<div class="modal fade" id="create" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New depository</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <!--Name-->
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Name</span>
                        </div>
                        <input type="text" class="form-control" placeholder="Enter name" name="name">
                    </div>
                    <!--type of depository-->
                    <div class="col-auto my-1">
                        <label class="mr-sm-2" for="tDep">Type</label>
                        <select class="custom-select mr-sm-2" id="inlineFormCustomSelect" name="tDep">
                            <option value="CARD" selected>Card</option>
                            <option value="DEPOSIT">Deposite</option>
                            <option value="CASH">Cash</option>
                        </select>
                    </div>
                    <!--type of money-->
                    <div class="col-auto my-1">
                        <label class="mr-sm-2" for="tMoney">Currency</label>
                        <select class="custom-select mr-sm-2" id="inlineFormCustomSelect" name="tMoney">
                            <option value="BYN" selected>BYN</option>
                            <option value="USD">USD</option>
                            <option value="RUB">RUB</option>
                            <option value="EUR">EUR</option>
                        </select>
                    </div>
                    <!--amount of money-->
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">$</span>
                        </div>
                        <input type="text" class="form-control" placeholder="Amount of money" name="amount">
                    </div>
                    <br />
                    <br />
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="display: flex;">
                            <input type="submit" value="Create" class="btn btn-success" formaction="../Depository/Create" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col">
        <div id="doughnut_spending">
            <canvas id="Spending_chart" width="300" height="300"></canvas>
        </div>
    </div>
    <div class="col">
        <div id="doughnut_addition">
            <canvas id="Addition_chart" width="300" height="300"></canvas>
        </div>
    </div>
</div>

<script>
    const colors = [
        'rgba(255, 99, 132)',
        'rgba(54, 162, 235)',
        'rgba(255, 206, 86)',
        'rgba(75, 192, 192)',
        'rgba(102, 54, 255)',
        'rgba(46, 85, 183)',
        'rgba(190, 30, 80)',
        'rgba(190, 30, 199)',
        'rgba(26, 15, 49)'
    ];

    $(window).on('load', function () {
        $.get("/api/Charts/allDepository/Spending/CurrentMonth", {},
            function (data) {
                const labelsDoughnut = [];
                const dataDoughnut = [];
                for (var i = 0; i < data.length; i++) {
                    labelsDoughnut.push(data[i].Depository);
                    dataDoughnut.push(data[i].Sum);
                }

                new Chart(Spending_chart, {
                    type: 'doughnut',
                    data: {
                        labels: labelsDoughnut,
                        datasets: [{
                            label: '',
                            data: dataDoughnut,
                            backgroundColor: colors,
                            borderColor: colors,
                            borderWidth: 2
                        }]
                    },
                    options: {
                        //cutoutPercentage: 40,
                        responsive: false,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Expenses for the current month'
                            }
                        }
                    }
                });

            });

        $.get("/api/Charts/allDepository/Addition/CurrentMonth", {},
            function (data) {
                const labelsDoughnut = [];
                const dataDoughnut = [];
                for (var i = 0; i < data.length; i++) {
                    labelsDoughnut.push(data[i].Depository);
                    dataDoughnut.push(data[i].Sum);
                }

                new Chart(Addition_chart, {
                    type: 'doughnut',
                    data: {
                        labels: labelsDoughnut,
                        datasets: [{
                            label: '',
                            data: dataDoughnut,
                            backgroundColor: colors,
                            borderColor: colors,
                            borderWidth: 2
                        }]
                    },
                    options: {
                        //cutoutPercentage: 40,
                        responsive: false,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Addition for the current month'
                            }
                        }
                    }
                });
            });
    })
</script>


